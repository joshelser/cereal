// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/test/protobuf/simple.proto

package cereal.impl.objects.protobuf;

public final class SimpleOuter {
  private SimpleOuter() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SimpleOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional double dub = 1;
    /**
     * <code>optional double dub = 1;</code>
     */
    boolean hasDub();
    /**
     * <code>optional double dub = 1;</code>
     */
    double getDub();

    // optional float flt = 2;
    /**
     * <code>optional float flt = 2;</code>
     */
    boolean hasFlt();
    /**
     * <code>optional float flt = 2;</code>
     */
    float getFlt();

    // optional int32 int = 3;
    /**
     * <code>optional int32 int = 3;</code>
     */
    boolean hasInt();
    /**
     * <code>optional int32 int = 3;</code>
     */
    int getInt();

    // optional int64 long = 4;
    /**
     * <code>optional int64 long = 4;</code>
     */
    boolean hasLong();
    /**
     * <code>optional int64 long = 4;</code>
     */
    long getLong();

    // optional bool boolean = 5;
    /**
     * <code>optional bool boolean = 5;</code>
     */
    boolean hasBoolean();
    /**
     * <code>optional bool boolean = 5;</code>
     */
    boolean getBoolean();

    // optional string str = 6;
    /**
     * <code>optional string str = 6;</code>
     */
    boolean hasStr();
    /**
     * <code>optional string str = 6;</code>
     */
    java.lang.String getStr();
    /**
     * <code>optional string str = 6;</code>
     */
    com.google.protobuf.ByteString
        getStrBytes();

    // optional bytes byte_str = 7;
    /**
     * <code>optional bytes byte_str = 7;</code>
     */
    boolean hasByteStr();
    /**
     * <code>optional bytes byte_str = 7;</code>
     */
    com.google.protobuf.ByteString getByteStr();
  }
  /**
   * Protobuf type {@code cereal.impl.Simple}
   */
  public static final class Simple extends
      com.google.protobuf.GeneratedMessage
      implements SimpleOrBuilder {
    // Use Simple.newBuilder() to construct.
    private Simple(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Simple(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Simple defaultInstance;
    public static Simple getDefaultInstance() {
      return defaultInstance;
    }

    public Simple getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Simple(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              dub_ = input.readDouble();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              flt_ = input.readFloat();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              int_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              long_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              boolean_ = input.readBool();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              str_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              byteStr_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cereal.impl.objects.protobuf.SimpleOuter.internal_static_cereal_impl_Simple_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cereal.impl.objects.protobuf.SimpleOuter.internal_static_cereal_impl_Simple_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cereal.impl.objects.protobuf.SimpleOuter.Simple.class, cereal.impl.objects.protobuf.SimpleOuter.Simple.Builder.class);
    }

    public static com.google.protobuf.Parser<Simple> PARSER =
        new com.google.protobuf.AbstractParser<Simple>() {
      public Simple parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Simple(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Simple> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional double dub = 1;
    public static final int DUB_FIELD_NUMBER = 1;
    private double dub_;
    /**
     * <code>optional double dub = 1;</code>
     */
    public boolean hasDub() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional double dub = 1;</code>
     */
    public double getDub() {
      return dub_;
    }

    // optional float flt = 2;
    public static final int FLT_FIELD_NUMBER = 2;
    private float flt_;
    /**
     * <code>optional float flt = 2;</code>
     */
    public boolean hasFlt() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float flt = 2;</code>
     */
    public float getFlt() {
      return flt_;
    }

    // optional int32 int = 3;
    public static final int INT_FIELD_NUMBER = 3;
    private int int_;
    /**
     * <code>optional int32 int = 3;</code>
     */
    public boolean hasInt() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 int = 3;</code>
     */
    public int getInt() {
      return int_;
    }

    // optional int64 long = 4;
    public static final int LONG_FIELD_NUMBER = 4;
    private long long_;
    /**
     * <code>optional int64 long = 4;</code>
     */
    public boolean hasLong() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 long = 4;</code>
     */
    public long getLong() {
      return long_;
    }

    // optional bool boolean = 5;
    public static final int BOOLEAN_FIELD_NUMBER = 5;
    private boolean boolean_;
    /**
     * <code>optional bool boolean = 5;</code>
     */
    public boolean hasBoolean() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool boolean = 5;</code>
     */
    public boolean getBoolean() {
      return boolean_;
    }

    // optional string str = 6;
    public static final int STR_FIELD_NUMBER = 6;
    private java.lang.Object str_;
    /**
     * <code>optional string str = 6;</code>
     */
    public boolean hasStr() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string str = 6;</code>
     */
    public java.lang.String getStr() {
      java.lang.Object ref = str_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          str_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string str = 6;</code>
     */
    public com.google.protobuf.ByteString
        getStrBytes() {
      java.lang.Object ref = str_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        str_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bytes byte_str = 7;
    public static final int BYTE_STR_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString byteStr_;
    /**
     * <code>optional bytes byte_str = 7;</code>
     */
    public boolean hasByteStr() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bytes byte_str = 7;</code>
     */
    public com.google.protobuf.ByteString getByteStr() {
      return byteStr_;
    }

    private void initFields() {
      dub_ = 0D;
      flt_ = 0F;
      int_ = 0;
      long_ = 0L;
      boolean_ = false;
      str_ = "";
      byteStr_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, dub_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, flt_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, int_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, long_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, boolean_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getStrBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, byteStr_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, dub_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, flt_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, int_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, long_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, boolean_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getStrBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, byteStr_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cereal.impl.objects.protobuf.SimpleOuter.Simple parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.Simple parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.Simple parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.Simple parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.Simple parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.Simple parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.Simple parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.Simple parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.Simple parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.Simple parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cereal.impl.objects.protobuf.SimpleOuter.Simple prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code cereal.impl.Simple}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cereal.impl.objects.protobuf.SimpleOuter.SimpleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cereal.impl.objects.protobuf.SimpleOuter.internal_static_cereal_impl_Simple_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cereal.impl.objects.protobuf.SimpleOuter.internal_static_cereal_impl_Simple_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cereal.impl.objects.protobuf.SimpleOuter.Simple.class, cereal.impl.objects.protobuf.SimpleOuter.Simple.Builder.class);
      }

      // Construct using cereal.impl.objects.protobuf.SimpleOuter.Simple.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        dub_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        flt_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        int_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        long_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        boolean_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        str_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        byteStr_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cereal.impl.objects.protobuf.SimpleOuter.internal_static_cereal_impl_Simple_descriptor;
      }

      public cereal.impl.objects.protobuf.SimpleOuter.Simple getDefaultInstanceForType() {
        return cereal.impl.objects.protobuf.SimpleOuter.Simple.getDefaultInstance();
      }

      public cereal.impl.objects.protobuf.SimpleOuter.Simple build() {
        cereal.impl.objects.protobuf.SimpleOuter.Simple result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cereal.impl.objects.protobuf.SimpleOuter.Simple buildPartial() {
        cereal.impl.objects.protobuf.SimpleOuter.Simple result = new cereal.impl.objects.protobuf.SimpleOuter.Simple(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.dub_ = dub_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.flt_ = flt_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.int_ = int_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.long_ = long_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.boolean_ = boolean_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.str_ = str_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.byteStr_ = byteStr_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cereal.impl.objects.protobuf.SimpleOuter.Simple) {
          return mergeFrom((cereal.impl.objects.protobuf.SimpleOuter.Simple)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cereal.impl.objects.protobuf.SimpleOuter.Simple other) {
        if (other == cereal.impl.objects.protobuf.SimpleOuter.Simple.getDefaultInstance()) return this;
        if (other.hasDub()) {
          setDub(other.getDub());
        }
        if (other.hasFlt()) {
          setFlt(other.getFlt());
        }
        if (other.hasInt()) {
          setInt(other.getInt());
        }
        if (other.hasLong()) {
          setLong(other.getLong());
        }
        if (other.hasBoolean()) {
          setBoolean(other.getBoolean());
        }
        if (other.hasStr()) {
          bitField0_ |= 0x00000020;
          str_ = other.str_;
          onChanged();
        }
        if (other.hasByteStr()) {
          setByteStr(other.getByteStr());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cereal.impl.objects.protobuf.SimpleOuter.Simple parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cereal.impl.objects.protobuf.SimpleOuter.Simple) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional double dub = 1;
      private double dub_ ;
      /**
       * <code>optional double dub = 1;</code>
       */
      public boolean hasDub() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional double dub = 1;</code>
       */
      public double getDub() {
        return dub_;
      }
      /**
       * <code>optional double dub = 1;</code>
       */
      public Builder setDub(double value) {
        bitField0_ |= 0x00000001;
        dub_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double dub = 1;</code>
       */
      public Builder clearDub() {
        bitField0_ = (bitField0_ & ~0x00000001);
        dub_ = 0D;
        onChanged();
        return this;
      }

      // optional float flt = 2;
      private float flt_ ;
      /**
       * <code>optional float flt = 2;</code>
       */
      public boolean hasFlt() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float flt = 2;</code>
       */
      public float getFlt() {
        return flt_;
      }
      /**
       * <code>optional float flt = 2;</code>
       */
      public Builder setFlt(float value) {
        bitField0_ |= 0x00000002;
        flt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float flt = 2;</code>
       */
      public Builder clearFlt() {
        bitField0_ = (bitField0_ & ~0x00000002);
        flt_ = 0F;
        onChanged();
        return this;
      }

      // optional int32 int = 3;
      private int int_ ;
      /**
       * <code>optional int32 int = 3;</code>
       */
      public boolean hasInt() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 int = 3;</code>
       */
      public int getInt() {
        return int_;
      }
      /**
       * <code>optional int32 int = 3;</code>
       */
      public Builder setInt(int value) {
        bitField0_ |= 0x00000004;
        int_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 int = 3;</code>
       */
      public Builder clearInt() {
        bitField0_ = (bitField0_ & ~0x00000004);
        int_ = 0;
        onChanged();
        return this;
      }

      // optional int64 long = 4;
      private long long_ ;
      /**
       * <code>optional int64 long = 4;</code>
       */
      public boolean hasLong() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 long = 4;</code>
       */
      public long getLong() {
        return long_;
      }
      /**
       * <code>optional int64 long = 4;</code>
       */
      public Builder setLong(long value) {
        bitField0_ |= 0x00000008;
        long_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 long = 4;</code>
       */
      public Builder clearLong() {
        bitField0_ = (bitField0_ & ~0x00000008);
        long_ = 0L;
        onChanged();
        return this;
      }

      // optional bool boolean = 5;
      private boolean boolean_ ;
      /**
       * <code>optional bool boolean = 5;</code>
       */
      public boolean hasBoolean() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool boolean = 5;</code>
       */
      public boolean getBoolean() {
        return boolean_;
      }
      /**
       * <code>optional bool boolean = 5;</code>
       */
      public Builder setBoolean(boolean value) {
        bitField0_ |= 0x00000010;
        boolean_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool boolean = 5;</code>
       */
      public Builder clearBoolean() {
        bitField0_ = (bitField0_ & ~0x00000010);
        boolean_ = false;
        onChanged();
        return this;
      }

      // optional string str = 6;
      private java.lang.Object str_ = "";
      /**
       * <code>optional string str = 6;</code>
       */
      public boolean hasStr() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string str = 6;</code>
       */
      public java.lang.String getStr() {
        java.lang.Object ref = str_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          str_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string str = 6;</code>
       */
      public com.google.protobuf.ByteString
          getStrBytes() {
        java.lang.Object ref = str_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          str_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string str = 6;</code>
       */
      public Builder setStr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        str_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string str = 6;</code>
       */
      public Builder clearStr() {
        bitField0_ = (bitField0_ & ~0x00000020);
        str_ = getDefaultInstance().getStr();
        onChanged();
        return this;
      }
      /**
       * <code>optional string str = 6;</code>
       */
      public Builder setStrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        str_ = value;
        onChanged();
        return this;
      }

      // optional bytes byte_str = 7;
      private com.google.protobuf.ByteString byteStr_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes byte_str = 7;</code>
       */
      public boolean hasByteStr() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bytes byte_str = 7;</code>
       */
      public com.google.protobuf.ByteString getByteStr() {
        return byteStr_;
      }
      /**
       * <code>optional bytes byte_str = 7;</code>
       */
      public Builder setByteStr(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        byteStr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes byte_str = 7;</code>
       */
      public Builder clearByteStr() {
        bitField0_ = (bitField0_ & ~0x00000040);
        byteStr_ = getDefaultInstance().getByteStr();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:cereal.impl.Simple)
    }

    static {
      defaultInstance = new Simple(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:cereal.impl.Simple)
  }

  public interface ComplexOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated string str_list = 1;
    /**
     * <code>repeated string str_list = 1;</code>
     */
    java.util.List<java.lang.String>
    getStrListList();
    /**
     * <code>repeated string str_list = 1;</code>
     */
    int getStrListCount();
    /**
     * <code>repeated string str_list = 1;</code>
     */
    java.lang.String getStrList(int index);
    /**
     * <code>repeated string str_list = 1;</code>
     */
    com.google.protobuf.ByteString
        getStrListBytes(int index);
  }
  /**
   * Protobuf type {@code cereal.impl.Complex}
   */
  public static final class Complex extends
      com.google.protobuf.GeneratedMessage
      implements ComplexOrBuilder {
    // Use Complex.newBuilder() to construct.
    private Complex(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Complex(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Complex defaultInstance;
    public static Complex getDefaultInstance() {
      return defaultInstance;
    }

    public Complex getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Complex(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                strList_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              strList_.add(input.readBytes());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          strList_ = new com.google.protobuf.UnmodifiableLazyStringList(strList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cereal.impl.objects.protobuf.SimpleOuter.internal_static_cereal_impl_Complex_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cereal.impl.objects.protobuf.SimpleOuter.internal_static_cereal_impl_Complex_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cereal.impl.objects.protobuf.SimpleOuter.Complex.class, cereal.impl.objects.protobuf.SimpleOuter.Complex.Builder.class);
    }

    public static com.google.protobuf.Parser<Complex> PARSER =
        new com.google.protobuf.AbstractParser<Complex>() {
      public Complex parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Complex(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Complex> getParserForType() {
      return PARSER;
    }

    // repeated string str_list = 1;
    public static final int STR_LIST_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList strList_;
    /**
     * <code>repeated string str_list = 1;</code>
     */
    public java.util.List<java.lang.String>
        getStrListList() {
      return strList_;
    }
    /**
     * <code>repeated string str_list = 1;</code>
     */
    public int getStrListCount() {
      return strList_.size();
    }
    /**
     * <code>repeated string str_list = 1;</code>
     */
    public java.lang.String getStrList(int index) {
      return strList_.get(index);
    }
    /**
     * <code>repeated string str_list = 1;</code>
     */
    public com.google.protobuf.ByteString
        getStrListBytes(int index) {
      return strList_.getByteString(index);
    }

    private void initFields() {
      strList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < strList_.size(); i++) {
        output.writeBytes(1, strList_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < strList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(strList_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getStrListList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cereal.impl.objects.protobuf.SimpleOuter.Complex parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.Complex parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.Complex parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.Complex parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.Complex parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.Complex parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.Complex parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.Complex parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.Complex parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.Complex parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cereal.impl.objects.protobuf.SimpleOuter.Complex prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code cereal.impl.Complex}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cereal.impl.objects.protobuf.SimpleOuter.ComplexOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cereal.impl.objects.protobuf.SimpleOuter.internal_static_cereal_impl_Complex_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cereal.impl.objects.protobuf.SimpleOuter.internal_static_cereal_impl_Complex_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cereal.impl.objects.protobuf.SimpleOuter.Complex.class, cereal.impl.objects.protobuf.SimpleOuter.Complex.Builder.class);
      }

      // Construct using cereal.impl.objects.protobuf.SimpleOuter.Complex.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        strList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cereal.impl.objects.protobuf.SimpleOuter.internal_static_cereal_impl_Complex_descriptor;
      }

      public cereal.impl.objects.protobuf.SimpleOuter.Complex getDefaultInstanceForType() {
        return cereal.impl.objects.protobuf.SimpleOuter.Complex.getDefaultInstance();
      }

      public cereal.impl.objects.protobuf.SimpleOuter.Complex build() {
        cereal.impl.objects.protobuf.SimpleOuter.Complex result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cereal.impl.objects.protobuf.SimpleOuter.Complex buildPartial() {
        cereal.impl.objects.protobuf.SimpleOuter.Complex result = new cereal.impl.objects.protobuf.SimpleOuter.Complex(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          strList_ = new com.google.protobuf.UnmodifiableLazyStringList(
              strList_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.strList_ = strList_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cereal.impl.objects.protobuf.SimpleOuter.Complex) {
          return mergeFrom((cereal.impl.objects.protobuf.SimpleOuter.Complex)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cereal.impl.objects.protobuf.SimpleOuter.Complex other) {
        if (other == cereal.impl.objects.protobuf.SimpleOuter.Complex.getDefaultInstance()) return this;
        if (!other.strList_.isEmpty()) {
          if (strList_.isEmpty()) {
            strList_ = other.strList_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureStrListIsMutable();
            strList_.addAll(other.strList_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cereal.impl.objects.protobuf.SimpleOuter.Complex parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cereal.impl.objects.protobuf.SimpleOuter.Complex) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated string str_list = 1;
      private com.google.protobuf.LazyStringList strList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureStrListIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          strList_ = new com.google.protobuf.LazyStringArrayList(strList_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated string str_list = 1;</code>
       */
      public java.util.List<java.lang.String>
          getStrListList() {
        return java.util.Collections.unmodifiableList(strList_);
      }
      /**
       * <code>repeated string str_list = 1;</code>
       */
      public int getStrListCount() {
        return strList_.size();
      }
      /**
       * <code>repeated string str_list = 1;</code>
       */
      public java.lang.String getStrList(int index) {
        return strList_.get(index);
      }
      /**
       * <code>repeated string str_list = 1;</code>
       */
      public com.google.protobuf.ByteString
          getStrListBytes(int index) {
        return strList_.getByteString(index);
      }
      /**
       * <code>repeated string str_list = 1;</code>
       */
      public Builder setStrList(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrListIsMutable();
        strList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string str_list = 1;</code>
       */
      public Builder addStrList(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrListIsMutable();
        strList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string str_list = 1;</code>
       */
      public Builder addAllStrList(
          java.lang.Iterable<java.lang.String> values) {
        ensureStrListIsMutable();
        super.addAll(values, strList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string str_list = 1;</code>
       */
      public Builder clearStrList() {
        strList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string str_list = 1;</code>
       */
      public Builder addStrListBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrListIsMutable();
        strList_.add(value);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:cereal.impl.Complex)
    }

    static {
      defaultInstance = new Complex(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:cereal.impl.Complex)
  }

  public interface NestedOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .cereal.impl.Simple simple = 1;
    /**
     * <code>optional .cereal.impl.Simple simple = 1;</code>
     */
    boolean hasSimple();
    /**
     * <code>optional .cereal.impl.Simple simple = 1;</code>
     */
    cereal.impl.objects.protobuf.SimpleOuter.Simple getSimple();
    /**
     * <code>optional .cereal.impl.Simple simple = 1;</code>
     */
    cereal.impl.objects.protobuf.SimpleOuter.SimpleOrBuilder getSimpleOrBuilder();

    // optional .cereal.impl.Complex complex = 2;
    /**
     * <code>optional .cereal.impl.Complex complex = 2;</code>
     */
    boolean hasComplex();
    /**
     * <code>optional .cereal.impl.Complex complex = 2;</code>
     */
    cereal.impl.objects.protobuf.SimpleOuter.Complex getComplex();
    /**
     * <code>optional .cereal.impl.Complex complex = 2;</code>
     */
    cereal.impl.objects.protobuf.SimpleOuter.ComplexOrBuilder getComplexOrBuilder();
  }
  /**
   * Protobuf type {@code cereal.impl.Nested}
   */
  public static final class Nested extends
      com.google.protobuf.GeneratedMessage
      implements NestedOrBuilder {
    // Use Nested.newBuilder() to construct.
    private Nested(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Nested(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Nested defaultInstance;
    public static Nested getDefaultInstance() {
      return defaultInstance;
    }

    public Nested getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Nested(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              cereal.impl.objects.protobuf.SimpleOuter.Simple.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = simple_.toBuilder();
              }
              simple_ = input.readMessage(cereal.impl.objects.protobuf.SimpleOuter.Simple.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(simple_);
                simple_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              cereal.impl.objects.protobuf.SimpleOuter.Complex.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = complex_.toBuilder();
              }
              complex_ = input.readMessage(cereal.impl.objects.protobuf.SimpleOuter.Complex.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(complex_);
                complex_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cereal.impl.objects.protobuf.SimpleOuter.internal_static_cereal_impl_Nested_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cereal.impl.objects.protobuf.SimpleOuter.internal_static_cereal_impl_Nested_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cereal.impl.objects.protobuf.SimpleOuter.Nested.class, cereal.impl.objects.protobuf.SimpleOuter.Nested.Builder.class);
    }

    public static com.google.protobuf.Parser<Nested> PARSER =
        new com.google.protobuf.AbstractParser<Nested>() {
      public Nested parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Nested(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Nested> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .cereal.impl.Simple simple = 1;
    public static final int SIMPLE_FIELD_NUMBER = 1;
    private cereal.impl.objects.protobuf.SimpleOuter.Simple simple_;
    /**
     * <code>optional .cereal.impl.Simple simple = 1;</code>
     */
    public boolean hasSimple() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .cereal.impl.Simple simple = 1;</code>
     */
    public cereal.impl.objects.protobuf.SimpleOuter.Simple getSimple() {
      return simple_;
    }
    /**
     * <code>optional .cereal.impl.Simple simple = 1;</code>
     */
    public cereal.impl.objects.protobuf.SimpleOuter.SimpleOrBuilder getSimpleOrBuilder() {
      return simple_;
    }

    // optional .cereal.impl.Complex complex = 2;
    public static final int COMPLEX_FIELD_NUMBER = 2;
    private cereal.impl.objects.protobuf.SimpleOuter.Complex complex_;
    /**
     * <code>optional .cereal.impl.Complex complex = 2;</code>
     */
    public boolean hasComplex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .cereal.impl.Complex complex = 2;</code>
     */
    public cereal.impl.objects.protobuf.SimpleOuter.Complex getComplex() {
      return complex_;
    }
    /**
     * <code>optional .cereal.impl.Complex complex = 2;</code>
     */
    public cereal.impl.objects.protobuf.SimpleOuter.ComplexOrBuilder getComplexOrBuilder() {
      return complex_;
    }

    private void initFields() {
      simple_ = cereal.impl.objects.protobuf.SimpleOuter.Simple.getDefaultInstance();
      complex_ = cereal.impl.objects.protobuf.SimpleOuter.Complex.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, simple_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, complex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, simple_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, complex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cereal.impl.objects.protobuf.SimpleOuter.Nested parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.Nested parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.Nested parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.Nested parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.Nested parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.Nested parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.Nested parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.Nested parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.Nested parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.Nested parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cereal.impl.objects.protobuf.SimpleOuter.Nested prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code cereal.impl.Nested}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cereal.impl.objects.protobuf.SimpleOuter.NestedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cereal.impl.objects.protobuf.SimpleOuter.internal_static_cereal_impl_Nested_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cereal.impl.objects.protobuf.SimpleOuter.internal_static_cereal_impl_Nested_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cereal.impl.objects.protobuf.SimpleOuter.Nested.class, cereal.impl.objects.protobuf.SimpleOuter.Nested.Builder.class);
      }

      // Construct using cereal.impl.objects.protobuf.SimpleOuter.Nested.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSimpleFieldBuilder();
          getComplexFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (simpleBuilder_ == null) {
          simple_ = cereal.impl.objects.protobuf.SimpleOuter.Simple.getDefaultInstance();
        } else {
          simpleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (complexBuilder_ == null) {
          complex_ = cereal.impl.objects.protobuf.SimpleOuter.Complex.getDefaultInstance();
        } else {
          complexBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cereal.impl.objects.protobuf.SimpleOuter.internal_static_cereal_impl_Nested_descriptor;
      }

      public cereal.impl.objects.protobuf.SimpleOuter.Nested getDefaultInstanceForType() {
        return cereal.impl.objects.protobuf.SimpleOuter.Nested.getDefaultInstance();
      }

      public cereal.impl.objects.protobuf.SimpleOuter.Nested build() {
        cereal.impl.objects.protobuf.SimpleOuter.Nested result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cereal.impl.objects.protobuf.SimpleOuter.Nested buildPartial() {
        cereal.impl.objects.protobuf.SimpleOuter.Nested result = new cereal.impl.objects.protobuf.SimpleOuter.Nested(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (simpleBuilder_ == null) {
          result.simple_ = simple_;
        } else {
          result.simple_ = simpleBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (complexBuilder_ == null) {
          result.complex_ = complex_;
        } else {
          result.complex_ = complexBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cereal.impl.objects.protobuf.SimpleOuter.Nested) {
          return mergeFrom((cereal.impl.objects.protobuf.SimpleOuter.Nested)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cereal.impl.objects.protobuf.SimpleOuter.Nested other) {
        if (other == cereal.impl.objects.protobuf.SimpleOuter.Nested.getDefaultInstance()) return this;
        if (other.hasSimple()) {
          mergeSimple(other.getSimple());
        }
        if (other.hasComplex()) {
          mergeComplex(other.getComplex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cereal.impl.objects.protobuf.SimpleOuter.Nested parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cereal.impl.objects.protobuf.SimpleOuter.Nested) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .cereal.impl.Simple simple = 1;
      private cereal.impl.objects.protobuf.SimpleOuter.Simple simple_ = cereal.impl.objects.protobuf.SimpleOuter.Simple.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cereal.impl.objects.protobuf.SimpleOuter.Simple, cereal.impl.objects.protobuf.SimpleOuter.Simple.Builder, cereal.impl.objects.protobuf.SimpleOuter.SimpleOrBuilder> simpleBuilder_;
      /**
       * <code>optional .cereal.impl.Simple simple = 1;</code>
       */
      public boolean hasSimple() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .cereal.impl.Simple simple = 1;</code>
       */
      public cereal.impl.objects.protobuf.SimpleOuter.Simple getSimple() {
        if (simpleBuilder_ == null) {
          return simple_;
        } else {
          return simpleBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .cereal.impl.Simple simple = 1;</code>
       */
      public Builder setSimple(cereal.impl.objects.protobuf.SimpleOuter.Simple value) {
        if (simpleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          simple_ = value;
          onChanged();
        } else {
          simpleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .cereal.impl.Simple simple = 1;</code>
       */
      public Builder setSimple(
          cereal.impl.objects.protobuf.SimpleOuter.Simple.Builder builderForValue) {
        if (simpleBuilder_ == null) {
          simple_ = builderForValue.build();
          onChanged();
        } else {
          simpleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .cereal.impl.Simple simple = 1;</code>
       */
      public Builder mergeSimple(cereal.impl.objects.protobuf.SimpleOuter.Simple value) {
        if (simpleBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              simple_ != cereal.impl.objects.protobuf.SimpleOuter.Simple.getDefaultInstance()) {
            simple_ =
              cereal.impl.objects.protobuf.SimpleOuter.Simple.newBuilder(simple_).mergeFrom(value).buildPartial();
          } else {
            simple_ = value;
          }
          onChanged();
        } else {
          simpleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .cereal.impl.Simple simple = 1;</code>
       */
      public Builder clearSimple() {
        if (simpleBuilder_ == null) {
          simple_ = cereal.impl.objects.protobuf.SimpleOuter.Simple.getDefaultInstance();
          onChanged();
        } else {
          simpleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .cereal.impl.Simple simple = 1;</code>
       */
      public cereal.impl.objects.protobuf.SimpleOuter.Simple.Builder getSimpleBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSimpleFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .cereal.impl.Simple simple = 1;</code>
       */
      public cereal.impl.objects.protobuf.SimpleOuter.SimpleOrBuilder getSimpleOrBuilder() {
        if (simpleBuilder_ != null) {
          return simpleBuilder_.getMessageOrBuilder();
        } else {
          return simple_;
        }
      }
      /**
       * <code>optional .cereal.impl.Simple simple = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cereal.impl.objects.protobuf.SimpleOuter.Simple, cereal.impl.objects.protobuf.SimpleOuter.Simple.Builder, cereal.impl.objects.protobuf.SimpleOuter.SimpleOrBuilder> 
          getSimpleFieldBuilder() {
        if (simpleBuilder_ == null) {
          simpleBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cereal.impl.objects.protobuf.SimpleOuter.Simple, cereal.impl.objects.protobuf.SimpleOuter.Simple.Builder, cereal.impl.objects.protobuf.SimpleOuter.SimpleOrBuilder>(
                  simple_,
                  getParentForChildren(),
                  isClean());
          simple_ = null;
        }
        return simpleBuilder_;
      }

      // optional .cereal.impl.Complex complex = 2;
      private cereal.impl.objects.protobuf.SimpleOuter.Complex complex_ = cereal.impl.objects.protobuf.SimpleOuter.Complex.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cereal.impl.objects.protobuf.SimpleOuter.Complex, cereal.impl.objects.protobuf.SimpleOuter.Complex.Builder, cereal.impl.objects.protobuf.SimpleOuter.ComplexOrBuilder> complexBuilder_;
      /**
       * <code>optional .cereal.impl.Complex complex = 2;</code>
       */
      public boolean hasComplex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .cereal.impl.Complex complex = 2;</code>
       */
      public cereal.impl.objects.protobuf.SimpleOuter.Complex getComplex() {
        if (complexBuilder_ == null) {
          return complex_;
        } else {
          return complexBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .cereal.impl.Complex complex = 2;</code>
       */
      public Builder setComplex(cereal.impl.objects.protobuf.SimpleOuter.Complex value) {
        if (complexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          complex_ = value;
          onChanged();
        } else {
          complexBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .cereal.impl.Complex complex = 2;</code>
       */
      public Builder setComplex(
          cereal.impl.objects.protobuf.SimpleOuter.Complex.Builder builderForValue) {
        if (complexBuilder_ == null) {
          complex_ = builderForValue.build();
          onChanged();
        } else {
          complexBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .cereal.impl.Complex complex = 2;</code>
       */
      public Builder mergeComplex(cereal.impl.objects.protobuf.SimpleOuter.Complex value) {
        if (complexBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              complex_ != cereal.impl.objects.protobuf.SimpleOuter.Complex.getDefaultInstance()) {
            complex_ =
              cereal.impl.objects.protobuf.SimpleOuter.Complex.newBuilder(complex_).mergeFrom(value).buildPartial();
          } else {
            complex_ = value;
          }
          onChanged();
        } else {
          complexBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .cereal.impl.Complex complex = 2;</code>
       */
      public Builder clearComplex() {
        if (complexBuilder_ == null) {
          complex_ = cereal.impl.objects.protobuf.SimpleOuter.Complex.getDefaultInstance();
          onChanged();
        } else {
          complexBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .cereal.impl.Complex complex = 2;</code>
       */
      public cereal.impl.objects.protobuf.SimpleOuter.Complex.Builder getComplexBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getComplexFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .cereal.impl.Complex complex = 2;</code>
       */
      public cereal.impl.objects.protobuf.SimpleOuter.ComplexOrBuilder getComplexOrBuilder() {
        if (complexBuilder_ != null) {
          return complexBuilder_.getMessageOrBuilder();
        } else {
          return complex_;
        }
      }
      /**
       * <code>optional .cereal.impl.Complex complex = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cereal.impl.objects.protobuf.SimpleOuter.Complex, cereal.impl.objects.protobuf.SimpleOuter.Complex.Builder, cereal.impl.objects.protobuf.SimpleOuter.ComplexOrBuilder> 
          getComplexFieldBuilder() {
        if (complexBuilder_ == null) {
          complexBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cereal.impl.objects.protobuf.SimpleOuter.Complex, cereal.impl.objects.protobuf.SimpleOuter.Complex.Builder, cereal.impl.objects.protobuf.SimpleOuter.ComplexOrBuilder>(
                  complex_,
                  getParentForChildren(),
                  isClean());
          complex_ = null;
        }
        return complexBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:cereal.impl.Nested)
    }

    static {
      defaultInstance = new Nested(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:cereal.impl.Nested)
  }

  public interface RepeatedNestedOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .cereal.impl.Complex complexes = 1;
    /**
     * <code>repeated .cereal.impl.Complex complexes = 1;</code>
     */
    java.util.List<cereal.impl.objects.protobuf.SimpleOuter.Complex> 
        getComplexesList();
    /**
     * <code>repeated .cereal.impl.Complex complexes = 1;</code>
     */
    cereal.impl.objects.protobuf.SimpleOuter.Complex getComplexes(int index);
    /**
     * <code>repeated .cereal.impl.Complex complexes = 1;</code>
     */
    int getComplexesCount();
    /**
     * <code>repeated .cereal.impl.Complex complexes = 1;</code>
     */
    java.util.List<? extends cereal.impl.objects.protobuf.SimpleOuter.ComplexOrBuilder> 
        getComplexesOrBuilderList();
    /**
     * <code>repeated .cereal.impl.Complex complexes = 1;</code>
     */
    cereal.impl.objects.protobuf.SimpleOuter.ComplexOrBuilder getComplexesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code cereal.impl.RepeatedNested}
   */
  public static final class RepeatedNested extends
      com.google.protobuf.GeneratedMessage
      implements RepeatedNestedOrBuilder {
    // Use RepeatedNested.newBuilder() to construct.
    private RepeatedNested(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RepeatedNested(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RepeatedNested defaultInstance;
    public static RepeatedNested getDefaultInstance() {
      return defaultInstance;
    }

    public RepeatedNested getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RepeatedNested(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                complexes_ = new java.util.ArrayList<cereal.impl.objects.protobuf.SimpleOuter.Complex>();
                mutable_bitField0_ |= 0x00000001;
              }
              complexes_.add(input.readMessage(cereal.impl.objects.protobuf.SimpleOuter.Complex.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          complexes_ = java.util.Collections.unmodifiableList(complexes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cereal.impl.objects.protobuf.SimpleOuter.internal_static_cereal_impl_RepeatedNested_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cereal.impl.objects.protobuf.SimpleOuter.internal_static_cereal_impl_RepeatedNested_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cereal.impl.objects.protobuf.SimpleOuter.RepeatedNested.class, cereal.impl.objects.protobuf.SimpleOuter.RepeatedNested.Builder.class);
    }

    public static com.google.protobuf.Parser<RepeatedNested> PARSER =
        new com.google.protobuf.AbstractParser<RepeatedNested>() {
      public RepeatedNested parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RepeatedNested(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RepeatedNested> getParserForType() {
      return PARSER;
    }

    // repeated .cereal.impl.Complex complexes = 1;
    public static final int COMPLEXES_FIELD_NUMBER = 1;
    private java.util.List<cereal.impl.objects.protobuf.SimpleOuter.Complex> complexes_;
    /**
     * <code>repeated .cereal.impl.Complex complexes = 1;</code>
     */
    public java.util.List<cereal.impl.objects.protobuf.SimpleOuter.Complex> getComplexesList() {
      return complexes_;
    }
    /**
     * <code>repeated .cereal.impl.Complex complexes = 1;</code>
     */
    public java.util.List<? extends cereal.impl.objects.protobuf.SimpleOuter.ComplexOrBuilder> 
        getComplexesOrBuilderList() {
      return complexes_;
    }
    /**
     * <code>repeated .cereal.impl.Complex complexes = 1;</code>
     */
    public int getComplexesCount() {
      return complexes_.size();
    }
    /**
     * <code>repeated .cereal.impl.Complex complexes = 1;</code>
     */
    public cereal.impl.objects.protobuf.SimpleOuter.Complex getComplexes(int index) {
      return complexes_.get(index);
    }
    /**
     * <code>repeated .cereal.impl.Complex complexes = 1;</code>
     */
    public cereal.impl.objects.protobuf.SimpleOuter.ComplexOrBuilder getComplexesOrBuilder(
        int index) {
      return complexes_.get(index);
    }

    private void initFields() {
      complexes_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < complexes_.size(); i++) {
        output.writeMessage(1, complexes_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < complexes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, complexes_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cereal.impl.objects.protobuf.SimpleOuter.RepeatedNested parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.RepeatedNested parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.RepeatedNested parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.RepeatedNested parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.RepeatedNested parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.RepeatedNested parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.RepeatedNested parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.RepeatedNested parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.RepeatedNested parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cereal.impl.objects.protobuf.SimpleOuter.RepeatedNested parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cereal.impl.objects.protobuf.SimpleOuter.RepeatedNested prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code cereal.impl.RepeatedNested}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cereal.impl.objects.protobuf.SimpleOuter.RepeatedNestedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cereal.impl.objects.protobuf.SimpleOuter.internal_static_cereal_impl_RepeatedNested_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cereal.impl.objects.protobuf.SimpleOuter.internal_static_cereal_impl_RepeatedNested_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cereal.impl.objects.protobuf.SimpleOuter.RepeatedNested.class, cereal.impl.objects.protobuf.SimpleOuter.RepeatedNested.Builder.class);
      }

      // Construct using cereal.impl.objects.protobuf.SimpleOuter.RepeatedNested.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getComplexesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (complexesBuilder_ == null) {
          complexes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          complexesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cereal.impl.objects.protobuf.SimpleOuter.internal_static_cereal_impl_RepeatedNested_descriptor;
      }

      public cereal.impl.objects.protobuf.SimpleOuter.RepeatedNested getDefaultInstanceForType() {
        return cereal.impl.objects.protobuf.SimpleOuter.RepeatedNested.getDefaultInstance();
      }

      public cereal.impl.objects.protobuf.SimpleOuter.RepeatedNested build() {
        cereal.impl.objects.protobuf.SimpleOuter.RepeatedNested result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cereal.impl.objects.protobuf.SimpleOuter.RepeatedNested buildPartial() {
        cereal.impl.objects.protobuf.SimpleOuter.RepeatedNested result = new cereal.impl.objects.protobuf.SimpleOuter.RepeatedNested(this);
        int from_bitField0_ = bitField0_;
        if (complexesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            complexes_ = java.util.Collections.unmodifiableList(complexes_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.complexes_ = complexes_;
        } else {
          result.complexes_ = complexesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cereal.impl.objects.protobuf.SimpleOuter.RepeatedNested) {
          return mergeFrom((cereal.impl.objects.protobuf.SimpleOuter.RepeatedNested)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cereal.impl.objects.protobuf.SimpleOuter.RepeatedNested other) {
        if (other == cereal.impl.objects.protobuf.SimpleOuter.RepeatedNested.getDefaultInstance()) return this;
        if (complexesBuilder_ == null) {
          if (!other.complexes_.isEmpty()) {
            if (complexes_.isEmpty()) {
              complexes_ = other.complexes_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureComplexesIsMutable();
              complexes_.addAll(other.complexes_);
            }
            onChanged();
          }
        } else {
          if (!other.complexes_.isEmpty()) {
            if (complexesBuilder_.isEmpty()) {
              complexesBuilder_.dispose();
              complexesBuilder_ = null;
              complexes_ = other.complexes_;
              bitField0_ = (bitField0_ & ~0x00000001);
              complexesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getComplexesFieldBuilder() : null;
            } else {
              complexesBuilder_.addAllMessages(other.complexes_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cereal.impl.objects.protobuf.SimpleOuter.RepeatedNested parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cereal.impl.objects.protobuf.SimpleOuter.RepeatedNested) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .cereal.impl.Complex complexes = 1;
      private java.util.List<cereal.impl.objects.protobuf.SimpleOuter.Complex> complexes_ =
        java.util.Collections.emptyList();
      private void ensureComplexesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          complexes_ = new java.util.ArrayList<cereal.impl.objects.protobuf.SimpleOuter.Complex>(complexes_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          cereal.impl.objects.protobuf.SimpleOuter.Complex, cereal.impl.objects.protobuf.SimpleOuter.Complex.Builder, cereal.impl.objects.protobuf.SimpleOuter.ComplexOrBuilder> complexesBuilder_;

      /**
       * <code>repeated .cereal.impl.Complex complexes = 1;</code>
       */
      public java.util.List<cereal.impl.objects.protobuf.SimpleOuter.Complex> getComplexesList() {
        if (complexesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(complexes_);
        } else {
          return complexesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .cereal.impl.Complex complexes = 1;</code>
       */
      public int getComplexesCount() {
        if (complexesBuilder_ == null) {
          return complexes_.size();
        } else {
          return complexesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .cereal.impl.Complex complexes = 1;</code>
       */
      public cereal.impl.objects.protobuf.SimpleOuter.Complex getComplexes(int index) {
        if (complexesBuilder_ == null) {
          return complexes_.get(index);
        } else {
          return complexesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .cereal.impl.Complex complexes = 1;</code>
       */
      public Builder setComplexes(
          int index, cereal.impl.objects.protobuf.SimpleOuter.Complex value) {
        if (complexesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComplexesIsMutable();
          complexes_.set(index, value);
          onChanged();
        } else {
          complexesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .cereal.impl.Complex complexes = 1;</code>
       */
      public Builder setComplexes(
          int index, cereal.impl.objects.protobuf.SimpleOuter.Complex.Builder builderForValue) {
        if (complexesBuilder_ == null) {
          ensureComplexesIsMutable();
          complexes_.set(index, builderForValue.build());
          onChanged();
        } else {
          complexesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .cereal.impl.Complex complexes = 1;</code>
       */
      public Builder addComplexes(cereal.impl.objects.protobuf.SimpleOuter.Complex value) {
        if (complexesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComplexesIsMutable();
          complexes_.add(value);
          onChanged();
        } else {
          complexesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .cereal.impl.Complex complexes = 1;</code>
       */
      public Builder addComplexes(
          int index, cereal.impl.objects.protobuf.SimpleOuter.Complex value) {
        if (complexesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComplexesIsMutable();
          complexes_.add(index, value);
          onChanged();
        } else {
          complexesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .cereal.impl.Complex complexes = 1;</code>
       */
      public Builder addComplexes(
          cereal.impl.objects.protobuf.SimpleOuter.Complex.Builder builderForValue) {
        if (complexesBuilder_ == null) {
          ensureComplexesIsMutable();
          complexes_.add(builderForValue.build());
          onChanged();
        } else {
          complexesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .cereal.impl.Complex complexes = 1;</code>
       */
      public Builder addComplexes(
          int index, cereal.impl.objects.protobuf.SimpleOuter.Complex.Builder builderForValue) {
        if (complexesBuilder_ == null) {
          ensureComplexesIsMutable();
          complexes_.add(index, builderForValue.build());
          onChanged();
        } else {
          complexesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .cereal.impl.Complex complexes = 1;</code>
       */
      public Builder addAllComplexes(
          java.lang.Iterable<? extends cereal.impl.objects.protobuf.SimpleOuter.Complex> values) {
        if (complexesBuilder_ == null) {
          ensureComplexesIsMutable();
          super.addAll(values, complexes_);
          onChanged();
        } else {
          complexesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .cereal.impl.Complex complexes = 1;</code>
       */
      public Builder clearComplexes() {
        if (complexesBuilder_ == null) {
          complexes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          complexesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .cereal.impl.Complex complexes = 1;</code>
       */
      public Builder removeComplexes(int index) {
        if (complexesBuilder_ == null) {
          ensureComplexesIsMutable();
          complexes_.remove(index);
          onChanged();
        } else {
          complexesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .cereal.impl.Complex complexes = 1;</code>
       */
      public cereal.impl.objects.protobuf.SimpleOuter.Complex.Builder getComplexesBuilder(
          int index) {
        return getComplexesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .cereal.impl.Complex complexes = 1;</code>
       */
      public cereal.impl.objects.protobuf.SimpleOuter.ComplexOrBuilder getComplexesOrBuilder(
          int index) {
        if (complexesBuilder_ == null) {
          return complexes_.get(index);  } else {
          return complexesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .cereal.impl.Complex complexes = 1;</code>
       */
      public java.util.List<? extends cereal.impl.objects.protobuf.SimpleOuter.ComplexOrBuilder> 
           getComplexesOrBuilderList() {
        if (complexesBuilder_ != null) {
          return complexesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(complexes_);
        }
      }
      /**
       * <code>repeated .cereal.impl.Complex complexes = 1;</code>
       */
      public cereal.impl.objects.protobuf.SimpleOuter.Complex.Builder addComplexesBuilder() {
        return getComplexesFieldBuilder().addBuilder(
            cereal.impl.objects.protobuf.SimpleOuter.Complex.getDefaultInstance());
      }
      /**
       * <code>repeated .cereal.impl.Complex complexes = 1;</code>
       */
      public cereal.impl.objects.protobuf.SimpleOuter.Complex.Builder addComplexesBuilder(
          int index) {
        return getComplexesFieldBuilder().addBuilder(
            index, cereal.impl.objects.protobuf.SimpleOuter.Complex.getDefaultInstance());
      }
      /**
       * <code>repeated .cereal.impl.Complex complexes = 1;</code>
       */
      public java.util.List<cereal.impl.objects.protobuf.SimpleOuter.Complex.Builder> 
           getComplexesBuilderList() {
        return getComplexesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          cereal.impl.objects.protobuf.SimpleOuter.Complex, cereal.impl.objects.protobuf.SimpleOuter.Complex.Builder, cereal.impl.objects.protobuf.SimpleOuter.ComplexOrBuilder> 
          getComplexesFieldBuilder() {
        if (complexesBuilder_ == null) {
          complexesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              cereal.impl.objects.protobuf.SimpleOuter.Complex, cereal.impl.objects.protobuf.SimpleOuter.Complex.Builder, cereal.impl.objects.protobuf.SimpleOuter.ComplexOrBuilder>(
                  complexes_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          complexes_ = null;
        }
        return complexesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:cereal.impl.RepeatedNested)
    }

    static {
      defaultInstance = new RepeatedNested(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:cereal.impl.RepeatedNested)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_cereal_impl_Simple_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cereal_impl_Simple_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_cereal_impl_Complex_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cereal_impl_Complex_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_cereal_impl_Nested_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cereal_impl_Nested_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_cereal_impl_RepeatedNested_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cereal_impl_RepeatedNested_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\036src/test/protobuf/simple.proto\022\013cereal" +
      ".impl\"m\n\006Simple\022\013\n\003dub\030\001 \001(\001\022\013\n\003flt\030\002 \001(" +
      "\002\022\013\n\003int\030\003 \001(\005\022\014\n\004long\030\004 \001(\003\022\017\n\007boolean\030" +
      "\005 \001(\010\022\013\n\003str\030\006 \001(\t\022\020\n\010byte_str\030\007 \001(\014\"\033\n\007" +
      "Complex\022\020\n\010str_list\030\001 \003(\t\"T\n\006Nested\022#\n\006s" +
      "imple\030\001 \001(\0132\023.cereal.impl.Simple\022%\n\007comp" +
      "lex\030\002 \001(\0132\024.cereal.impl.Complex\"9\n\016Repea" +
      "tedNested\022\'\n\tcomplexes\030\001 \003(\0132\024.cereal.im" +
      "pl.ComplexB-\n\034cereal.impl.objects.protob" +
      "ufB\013SimpleOuterH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_cereal_impl_Simple_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_cereal_impl_Simple_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_cereal_impl_Simple_descriptor,
              new java.lang.String[] { "Dub", "Flt", "Int", "Long", "Boolean", "Str", "ByteStr", });
          internal_static_cereal_impl_Complex_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_cereal_impl_Complex_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_cereal_impl_Complex_descriptor,
              new java.lang.String[] { "StrList", });
          internal_static_cereal_impl_Nested_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_cereal_impl_Nested_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_cereal_impl_Nested_descriptor,
              new java.lang.String[] { "Simple", "Complex", });
          internal_static_cereal_impl_RepeatedNested_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_cereal_impl_RepeatedNested_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_cereal_impl_RepeatedNested_descriptor,
              new java.lang.String[] { "Complexes", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
